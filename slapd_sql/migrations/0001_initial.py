# Generated by Django 3.0.5 on 2020-05-01 20:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LdapOcMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(db_index=True, help_text="the name of the objectClass; it MUST match the name of an objectClass that is loaded in slapd's schema", max_length=64, verbose_name='name')),
                ('keytbl', models.CharField(help_text='the table where entities for the objectClass are held. The name of the table that is referenced for the primary key of an entry', max_length=255, verbose_name='table name')),
                ('keycol', models.CharField(help_text="the table's primary key column name", max_length=255, verbose_name='key column')),
                ('create_proc', models.CharField(blank=True, default=None, help_text='the SQL code when an LDAP create is called', max_length=255, null=True, verbose_name='on create')),
                ('delete_proc', models.CharField(blank=True, default=None, help_text='the SQL code when an LDAP delete is called', max_length=255, null=True, verbose_name='on delete')),
                ('expect_return', models.IntegerField(default=0, help_text='what to expect when the query is successful (ie not an error)', verbose_name='expect return')),
            ],
            options={
                'verbose_name': 'ldap objectClasses mapping',
                'verbose_name_plural': 'ldap objectClasses mappings',
                'db_table': 'ldap_oc_mappings',
            },
        ),
        migrations.CreateModel(
            name='LdapEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('dn', models.CharField(max_length=254, unique=True, verbose_name='Distinguished names')),
                ('parent', models.IntegerField(help_text='what level in the LDAP tree this is located at, starting with 0 (zero)')),
                ('keyval', models.IntegerField(help_text='refers back to the id of the relevant row of the table the data is contained in. These rows are identified by a number that is a primary key')),
                ('oc_map', models.ForeignKey(help_text='refers back to the id of the relevant objectClass in the ldap_oc_mappings table', on_delete=django.db.models.deletion.CASCADE, to='slapd_sql.LdapOcMapping')),
            ],
            options={
                'verbose_name': 'Ldap Entry',
                'verbose_name_plural': 'Ldap Entries',
                'db_table': 'ldap_entries',
                'unique_together': {('oc_map', 'keyval')},
            },
        ),
        migrations.CreateModel(
            name='LdapEntriesObjectClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('oc_name', models.CharField(help_text="the name of the objectClass; it MUST match the name of an objectClass that is loaded in slapd's schema", max_length=254, verbose_name='ObjectClass name')),
                ('entry', models.ForeignKey(help_text='refers back to the id of the relevant objectClass in the ldap_oc_mappings table', on_delete=django.db.models.deletion.CASCADE, to='slapd_sql.LdapEntry')),
            ],
            options={
                'verbose_name': 'Ldap Entry objectClass',
                'verbose_name_plural': 'Ldap Entry objectClasses',
                'db_table': 'ldap_entry_objclasses',
            },
        ),
        migrations.CreateModel(
            name='LdapAttrMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(help_text='the LDAP attribute name', max_length=255, verbose_name='name')),
                ('sel_expr', models.CharField(help_text='the SELECT $arg part of the SQL statement', max_length=255, verbose_name='SELECT expr')),
                ('from_tbls', models.CharField(help_text='the FROM $arg part of the SQL statement', max_length=255, verbose_name='FROM expr')),
                ('join_where', models.CharField(blank=True, default=None, help_text='the WHERE ... xx.xx=yy.yy ... part of the SQL statement if applicable. A null is allowed if you are not doing a join.', max_length=255, null=True, verbose_name='WHERE expr')),
                ('add_proc', models.CharField(blank=True, default=None, help_text='the SQL code when an LDAP create is called', max_length=255, null=True, verbose_name='on CREATE expr')),
                ('delete_proc', models.CharField(blank=True, default=None, help_text='the SQL code when an LDAP delete is called', max_length=255, null=True, verbose_name='on DELETE expr')),
                ('param_order', models.IntegerField(default=3, verbose_name='param order')),
                ('expect_return', models.IntegerField(default=0, help_text='what to expect when the query is successful (ie not an error)', verbose_name='expect return code')),
                ('oc_map', models.ForeignKey(help_text='refers back to the id of the relevant objectClass in the ldap_oc_mappings table', on_delete=django.db.models.deletion.CASCADE, to='slapd_sql.LdapOcMapping')),
            ],
            options={
                'verbose_name': 'ldap Attribute mapping',
                'verbose_name_plural': 'ldap Attributes mappings',
                'db_table': 'ldap_attr_mappings',
            },
        ),
    ]
